services:
  # Main Backend API Gateway
  backend:
    build: 
      context: .
      dockerfile: ./backend/Dockerfile
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - DEBUG=true
      - DB_SERVICE_URL=${DB_SERVICE_URL}
#      - ML_SERVICE_URL=http://localhost:5002
      - NODE_ENV=${NODE_ENV}
      - PORT=${BACKEND_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
#      - ML_SERVICE_URL=${ML_SERVICE_URL}
      - FRONTEND_URL=${FRONTEND_URL}
    depends_on:
      - db-service
    networks:
      - timele-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT}:80"
    environment:
      - DEBUG=true
      - DB_SERVICE_URL=${DB_SERVICE_URL}
#      - ML_SERVICE_URL=http://localhost:5002
      - VITE_API_URL=${VITE_API_URL}
    depends_on:
      - backend
    networks:
      - timele-network
    restart: unless-stopped

#  ml:
#    build:
#      context: ./ml
#      dockerfile: Dockerfile
#    environment:
#      - DATABASE_URL=${DATABASE_URL}
#      - PYTHONPATH=/app
#    ports:
#      - "${ML_SERVICE_PORT}:${ML_SERVICE_PORT}"
#    #depends_on:
#    #  db:
#    #    condition: service_healthy
#    #  init-db:
#    #    condition: service_completed_successfully
#    volumes:
#      - ./ml-service:/app
#    networks:
#      - timele-network
#    restart: unless-stopped

  db-service:
    build:
      context: ./database-service
      dockerfile: Dockerfile
    ports:
      - "${DB_SERVICE_PORT}:${DB_SERVICE_PORT}"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DB_SERVICE_PORT=${DB_SERVICE_PORT}
    depends_on:
      - postgres
    networks:
      - timele-network
    restart: unless-stopped

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
#    ports:
#      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - timele-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "127.0.0.1:${PGADMIN_PORT}:80"   # restricted to development on local machine
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@timele.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgres
    networks:
      - timele-network
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin-data:

networks:
  timele-network:
    driver: bridge
